{
    "maxerr"        : 50,       // {int} Maximum error before stopping

    // Enforcing
    "camelcase"     : false,    // true: Identifiers must be in camelCase
    "eqeqeq"        : true,     // true: Enforces the use of strict equality operators
    "globalstrict"  : true,     // true: Suppresses warnings about the use of global strict mode
    "immed"         : true,     // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
    "indent"        : 4,        // {int} Number of spaces to use for indentation
    "latedef"       : true,     // true: Require variables/functions to be defined before being used
    "undef"         : true,     // true: This option prohibits the use of explicitly undeclared variables
    "unused"        : true,     // true: This option warns when you define and never use your variables
    "newcap"        : true,     // true: Require capitalization of all constructor functions e.g. `new F()`
    "nonew"         : true,     // true: Prohibit use of constructors for side-effects (without assignment)
    "quotmark"      : "single", // Quotation mark consistency:
                                //   false    : do nothing (default)
                                //   true     : ensure whatever is used is consistent
                                //   "single" : require single quotes
                                //   "double" : require double quotes
    "trailing"      : true,     // true: Prohibit trailing whitespaces

    // Relaxing
    "expr"          : true,     // true: Tolerate `ExpressionStatement` as Programs

    // Environments
    "browser"       : false,    // Web Browser (window, document, etc)
    "node"          : true,     // Node.js
    "devel"         : false,    // Development/debugging (alert, confirm, etc)
    "jquery"        : false,    // jQuery
    "jasmine"       : true,     // the Jasmine test framework
    "nonstandard"   : false,    // Widely adopted globals (escape, unescape, etc)

    "globals": {
        "require": false
    }
}
